#Max Low
#11-1-17
#bullsAndCows -- MASTERMIND W/Graphics

# imports
from ggame import *
from random import randint

#constants
ROWS = 11
COLS = 4
CELL_SIZE = 50

#colors
red = Color(0xFF0000,1)
blue = Color(0x0000FF,1)
green = Color(0x00FF00,1)
yellow =Color(0xFFFF00,1)
brown = Color(0xAA7C74,1)

def pickCode():
#Should take no arguments. The function should return a random 4 digit code with none of the numbers repeated. Don't forget that 0 is a digit.
    digit1 = 0
    digit2 = 0
    digit3 = 0
    digit4 = 0
#this part makes sure no number repeats
    while digit1 == digit2 or digit1 == digit3 or digit1 == digit4 or digit2 == digit3 or  digit2 == digit4 or digit3 == digit4:
        digit1 = randint(1,4)
        digit2 = randint(1,4)
        digit3 = randint(1,4) 
        digit4 = randint(1,4)
    if digit1 == 1:
        code1 = RectangleAsset(CELL_SIZE,CELL_SIZE,LineStyle(1,red),red)
    elif digit1 == 2:
        code1 = RectangleAsset(CELL_SIZE,CELL_SIZE,LineStyle(1,blue),blue)
    elif digit1 == 3:
        code1 = RectangleAsset(CELL_SIZE,CELL_SIZE,LineStyle(1,green),green)
    elif digit1 == 4:
        code1 = RectangleAsset(CELL_SIZE,CELL_SIZE,LineStyle(1,yellow),yellow)
        
    if digit2 == 1:
        code2= RectangleAsset(CELL_SIZE,CELL_SIZE,LineStyle(1,red),red)
    elif digit2 == 2:
        code2 = RectangleAsset(CELL_SIZE,CELL_SIZE,LineStyle(1,blue),blue)
    elif digit2 == 3:
        code2 = RectangleAsset(CELL_SIZE,CELL_SIZE,LineStyle(1,green),green)
    elif digit2 == 4:
        code2 = RectangleAsset(CELL_SIZE,CELL_SIZE,LineStyle(1,yellow),yellow)
    
    if digit3 == 1:
        code3 = RectangleAsset(CELL_SIZE,CELL_SIZE,LineStyle(1,red),red)
    elif digit3 == 2:
        code3 = RectangleAsset(CELL_SIZE,CELL_SIZE,LineStyle(1,blue),blue)
    elif digit3 == 3:
        code3 = RectangleAsset(CELL_SIZE,CELL_SIZE,LineStyle(1,green),green)
    elif digit3 == 4:
        code3 = RectangleAsset(CELL_SIZE,CELL_SIZE,LineStyle(1,yellow),yellow)
    
    if digit4 == 1:
        code4 = RectangleAsset(CELL_SIZE,CELL_SIZE,LineStyle(1,red),red)
    elif digit4 == 2:
        code4 = RectangleAsset(CELL_SIZE,CELL_SIZE,LineStyle(1,blue),blue)
    elif digit4 == 3:
        code4 = RectangleAsset(CELL_SIZE,CELL_SIZE,LineStyle(1,green),green)
    elif digit4 == 4:
        code4 = RectangleAsset(CELL_SIZE,CELL_SIZE,LineStyle(1,yellow),yellow)

    Sprite(code1,(0,0))
    Sprite(code2,(CELL_SIZE,0))
    Sprite(code3,(CELL_SIZE*2,0))
    Sprite(code4,(CELL_SIZE*3,0))
    

def red():
    # if r is pressed puts a red square in the right spot
    rrectangle == RectangleAsset(CELL_SIZE,CELL_SIZE,LineStyle(1,red),red)
    if column == 1 or column % 4 == 1: # need to account for exceeding 4
        enter1 = 1
        Sprite(rrectangle, (0,CELL_SIZE))
    elif column == 2 or column % 4 == 2:
        enter2 = 1
        Sprite(rrectangle, (CELL_SIZE,CELL_SIZE))
    elif column == 3 or column % 4 == 3:
        enter3 = 1
        Sprite(rrectangle, (CELL_SIZE,CELL_SIZE))
    elif column == 4 or column % 4 == 4:
        enter4 = 1
        Sprite(rrectangle, (CELL_SIZE,CELL_SIZE))

def blue():
     # if b is pressed puts a blue square in the right spot
    brectangle == RectangleAsset(CELL_SIZE,CELL_SIZE,LineStyle(1,blue),blue)
    if column == 1 or column % 4 == 1: # need to account for exceeding 4
        enter1 = 2
        Sprite(brectangle, (0,CELL_SIZE))
    elif column == 2 or column % 4 == 2:
        enter2 = 2
        Sprite(brectangle, (CELL_SIZE,CELL_SIZE))
    elif column == 3 or column % 4 == 3:
        enter3 = 2
        Sprite(brectangle, (CELL_SIZE,CELL_SIZE))
    elif column == 4 or column % 4 == 4:
        enter4 = 2
        Sprite(brectangle, (CELL_SIZE,CELL_SIZE))
    
def green():
    # if g is pressed puts a green square in the right spot
    grectangle == RectangleAsset(CELL_SIZE,CELL_SIZE,LineStyle(1,green),green)
    if column == 1 or column % 4 == 1: # need to account for exceeding 4
        enter1 = 3
        Sprite(grectangle, (0,CELL_SIZE))
    elif column == 2 or column % 4 == 2:
        enter2 = 3
        Sprite(grectangle, (CELL_SIZE,CELL_SIZE))
    elif column == 3 or column % 4 == 3:
        enter3 = 3
        Sprite(grectangle, (CELL_SIZE,CELL_SIZE))
    elif column == 4 or column % 4 == 4:
        enter4 = 3
        Sprite(grectangle, (CELL_SIZE,CELL_SIZE))

def yellow():
     # if y is pressed puts a blue square in the right spot
    yrectangle == RectangleAsset(CELL_SIZE,CELL_SIZE,LineStyle(1,yellow),yellow)
    if column == 1 or column % 4 == 1: # need to account for exceeding 4
        enter1 = 4
        Sprite(yrectangle, (0,CELL_SIZE))
    elif column == 2 or column % 4 == 2:
        enter2 = 4
        Sprite(yrectangle, (CELL_SIZE,CELL_SIZE))
    elif column == 3 or column % 4 == 3:
        enter3 = 4
        Sprite(yrectangle, (CELL_SIZE,CELL_SIZE))
    elif column == 4 or column % 4 == 4:
        enter4 = 4
        Sprite(yrectangle, (CELL_SIZE,CELL_SIZE))
    
def confirm():
    if enter1 != enter2 or enter1 != enter3 or enter1 != enter4 or enter2 != enter3 or enter2 != enter4 or enter3 != enter4:
        rows += 1
        return True
    else:
        Print('Invalid Code')

def enterCode():
    row = 1
    
    
    App.listenKeyEvent('keydown','r', red)
    App.listenKeyEvent('keydown','b', blue)
    App.listenKeyEvent('keydown','g', green)
    App.listenKeyEvent('keydown','y', yellow)
    App.listenKeyEvent('keydown','enter', confirm)
    ### in here add something that check for repeats and doesn't allow

def checkCode():
    cows =0
    bulls =0
    if digit1 == enter1:
        bulls += 1
    elif digit2 == enter2:
        bulls += 1
    elif digit3 == enter3:
        bulls += 1
    elif digit4 == enter4:
        bulls += 1
        
    if digit1 == enter2 or digit1 == enter3 or digit1 == enter4:
        cows += 1
    elif digit2 == enter1 or digit2 == enter3 or digit2 == enter4:
        cows += 1
    elif digit3 == enter1 or digit3 == enter2 or digit3 == enter4:
        cows += 1
    elif digit4 == enter1 or digit4 == enter2 or digit4 == enter4:
        cows += 1
    
    if bulls == 4:
        return True


    

# printStatus() #Should take two arguments, the guess that the user just made and the code that they are trying to guess. The function should print out how many bulls and cows that guess has in comparison to the real code.

if __name__ == '__main__': 
    data = {}
    data['digit1'] =0
    data['digit2'] =0
    data['digit3'] =0
    data['digit4'] =0
    
    data['enter1'] =0
    data['enter2'] =0
    data['enter3'] =0
    data['enter4'] =0
    
    data['row'] =1
    data['column'] =1
    
    data['cows'] =0
    data['bulls'] =0
    
    masterGrid = RectangleAsset(COLS*CELL_SIZE,ROWS*CELL_SIZE,LineStyle(1,brown),brown)
    Sprite(masterGrid)
    
    pickCode()
    
    while enter1 != digit1 or enter2 != digit2 or enter3 != digit3 or enter4 != digit4:
        if enterCode() == True:
            if checkcode() == True:
                print('YOU WIN!')
            else:
                print('Bulls:',bulls,'Cows:',cows)
                #resets the entered code
                enter1 = 0
                enter2 = 0
                enter3 = 0
                enter4 = 0
        
    App().run()

