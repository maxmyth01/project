#Max Low
#11-1-17
#bullsAndCows -- MASTERMIND W/Graphics

# imports
from ggame import *
from random import randint

#constants
ROWS = 11
COLS = 4
CELL_SIZE = 50

#colors
red = Color(0xFF0000,1)
blue = Color(0x0000FF,1)
green = Color(0x00FF00,1)
yellow =Color(0xFFFF00,1)
brown = Color(0xAA7C74,1)

def pickCode():
#Should take no arguments. The function should return a random 4 digit code with none of the numbers repeated. Don't forget that 0 is a digit.
    data['digit1'] = 0
    data['digit2'] = 0
    data['digit3'] = 0
    data['digit4'] = 0
#this part makes sure no number repeats
    while data['digit1'] == data['digit2'] or data['digit1'] == data['digit3'] or data['digit1'] == data['digit4'] or data['digit2'] == data['digit3'] or  data['digit2'] == data['digit4'] or data['digit3'] == data['digit4']:
        data['digit1'] = randint(1,4)
        data['digit2'] = randint(1,4)
        data['digit3'] = randint(1,4) 
        data['digit4'] = randint(1,4)
    if data['digit1'] == 1:
        code1 = RectangleAsset(CELL_SIZE,CELL_SIZE,LineStyle(1,red),red)
    elif data['digit1'] == 2:
        code1 = RectangleAsset(CELL_SIZE,CELL_SIZE,LineStyle(1,blue),blue)
    elif data['digit1'] == 3:
        code1 = RectangleAsset(CELL_SIZE,CELL_SIZE,LineStyle(1,green),green)
    elif data['digit1'] == 4:
        code1 = RectangleAsset(CELL_SIZE,CELL_SIZE,LineStyle(1,yellow),yellow)
        
    if data['digit2'] == 1:
        code2= RectangleAsset(CELL_SIZE,CELL_SIZE,LineStyle(1,red),red)
    elif data['digit2'] == 2:
        code2 = RectangleAsset(CELL_SIZE,CELL_SIZE,LineStyle(1,blue),blue)
    elif data['digit2'] == 3:
        code2 = RectangleAsset(CELL_SIZE,CELL_SIZE,LineStyle(1,green),green)
    elif data['digit2'] == 4:
        code2 = RectangleAsset(CELL_SIZE,CELL_SIZE,LineStyle(1,yellow),yellow)
    
    if data['digit3'] == 1:
        code3 = RectangleAsset(CELL_SIZE,CELL_SIZE,LineStyle(1,red),red)
    elif data['digit3'] == 2:
        code3 = RectangleAsset(CELL_SIZE,CELL_SIZE,LineStyle(1,blue),blue)
    elif data['digit3'] == 3:
        code3 = RectangleAsset(CELL_SIZE,CELL_SIZE,LineStyle(1,green),green)
    elif data['digit3'] == 4:
        code3 = RectangleAsset(CELL_SIZE,CELL_SIZE,LineStyle(1,yellow),yellow)
    
    if data['digit4'] == 1:
        code4 = RectangleAsset(CELL_SIZE,CELL_SIZE,LineStyle(1,red),red)
    elif data['digit4'] == 2:
        code4 = RectangleAsset(CELL_SIZE,CELL_SIZE,LineStyle(1,blue),blue)
    elif data['digit4'] == 3:
        code4 = RectangleAsset(CELL_SIZE,CELL_SIZE,LineStyle(1,green),green)
    elif data['digit4'] == 4:
        code4 = RectangleAsset(CELL_SIZE,CELL_SIZE,LineStyle(1,yellow),yellow)

    Sprite(code1,(0,0))
    Sprite(code2,(CELL_SIZE,0))
    Sprite(code3,(CELL_SIZE*2,0))
    Sprite(code4,(CELL_SIZE*3,0))
    

def r():
    # if r is pressed puts a red square in the right spot
    rrectangle == RectangleAsset(CELL_SIZE,CELL_SIZE,LineStyle(1,red),red)
    if data['column'] == 1 or data['column'] % 4 == 1: # need to account for exceeding 4
        data['enter1'] = 1
        Sprite(rrectangle, (CELL_SIZE*data['row'],CELL_SIZE))
    elif data['column'] == 2 or data['column'] % 4 == 2:
        data['enter2'] = 1
        Sprite(rrectangle, (CELL_SIZE*data['row'],CELL_SIZE*2))
    elif data['column'] == 3 or data['column'] % 4 == 3:
        data['enter3'] = 1
        Sprite(rrectangle, (CELL_SIZE*data['row'],CELL_SIZE*3))
    elif data['column'] == 4 or data['column'] % 4 == 4:
        data['enter4'] = 1
        Sprite(rrectangle, (CELL_SIZE*data['row'],CELL_SIZE*4))

def b():
     # if b is pressed puts a blue square in the right spot
    brectangle == RectangleAsset(CELL_SIZE,CELL_SIZE,LineStyle(1,blue),blue)
    if data['column'] == 1 or data['column'] % 4 == 1: # need to account for exceeding 4
        data['enter1'] = 2
        Sprite(brectangle, (CELL_SIZE*data['row'],CELL_SIZE))
    elif data['column'] == 2 or data['column'] % 4 == 2:
        data['enter2'] = 2
        Sprite(brectangle, (CELL_SIZE*data['row'],CELL_SIZE)*2)
    elif data['column'] == 3 or data['column'] % 4 == 3:
        data['enter3'] = 2
        Sprite(brectangle, (CELL_SIZE*data['row'],CELL_SIZE*3))
    elif data['column'] == 4 or data['column'] % 4 == 4:
        data['enter4'] = 2
        Sprite(brectangle, (CELL_SIZE*data['row'],CELL_SIZE*4))
    
def g():
    # if g is pressed puts a green square in the right spot
    grectangle == RectangleAsset(CELL_SIZE,CELL_SIZE,LineStyle(1,green),green)
    if data['column'] == 1 or data['column'] % 4 == 1: # need to account for exceeding 4
        data['enter1'] = 3
        Sprite(grectangle, (CELL_SIZE*data['row'],CELL_SIZE))
    elif data['column'] == 2 or data['column'] % 4 == 2:
        data['enter2'] = 3
        Sprite(grectangle, (CELL_SIZE*data['row'],CELL_SIZE*2))
    elif data['column'] == 3 or data['column'] % 4 == 3:
        data['enter3'] = 3
        Sprite(grectangle, (CELL_SIZE*data['row'],CELL_SIZE*3))
    elif data['column'] == 4 or data['column'] % 4 == 4:
        data['enter4'] = 3
        Sprite(grectangle, (CELL_SIZE*data['row'],CELL_SIZE*4))

def y():
     # if y is pressed puts a blue square in the right spot
    yrectangle == RectangleAsset(CELL_SIZE,CELL_SIZE,LineStyle(1,yellow),yellow)
    if data['column'] == 1 or data['column'] % 4 == 1: # need to account for exceeding 4
        data['enter1'] = 4
        Sprite(yrectangle, (CELL_SIZE*data['row'],CELL_SIZE))
    elif data['column'] == 2 or data['column'] % 4 == 2:
        data['enter2'] = 4
        Sprite(yrectangle, (CELL_SIZE*data['row'],CELL_SIZE*2))
    elif data['column'] == 3 or data['column'] % 4 == 3:
        data['enter3'] = 4
        Sprite(yrectangle, (CELL_SIZE*data['row'],CELL_SIZE*3))
    elif data['column'] == 4 or data['column'] % 4 == 4:
        data['enter4'] = 4
        Sprite(yrectangle, (CELL_SIZE*data['row'],CELL_SIZE*4))
    
def confirm():
    if data['enter1'] != data['enter2'] or data['enter1'] != data['enter3'] or data['enter1'] != enter4 or data['enter2'] != data['enter3'] or data['enter2'] != enter4 or data['enter3'] != enter4:
        data['row'] += 1
        data['column'] = 1
        return True
    else:
        Print('Invalid Code')
    

def enterCode():
    while True:
        App.listenKeyEvent('keydown','r', r)
        App.listenKeyEvent('keydown','b', b)
        App.listenKeyEvent('keydown','g', g)
        App.listenKeyEvent('keydown','y', y)
        App.listenKeyEvent('keydown','enter', confirm)
            
    ### in here add something that check for repeats and doesn't allow

def checkCode():
    data['cows'] =0
    data['bulls'] =0
    # check for bulls
    if data['digit1'] == data['enter1']:
        data['bulls'] += 1
    elif data['digit2'] == data['enter2']:
        data['bulls'] += 1
    elif data['digit3'] == data['enter3']:
        data['bulls'] += 1
    elif data['digit4'] == data['enter4']:
        data['bulls'] += 1
        
    
    #check for cows    
    if data['digit1'] == data['enter2'] or data['digit1'] == data['enter3'] or data['digit1'] == data['enter4']:
        data['cows'] += 1
    elif data['digit2'] == data['enter1'] or data['digit2'] == data['enter3'] or data['digit2'] == data['enter4']:
        data['cows'] += 1
    elif data['digit3'] == data['enter1'] or data['digit3'] == data['enter2'] or data['digit3'] == data['enter4']:
        data['cows'] += 1
    elif data['digit4'] == data['enter1'] or data['digit4'] == data['enter2'] or data['digit4'] == data['enter4']:
        data['cows'] += 1
    
    if data['bulls'] == 4:
        return True


    

# printStatus() #Should take two arguments, the guess that the user just made and the code that they are trying to guess. The function should print out how many bulls and cows that guess has in comparison to the real code.

if __name__ == '__main__': 
    data = {}
    data['digit1'] =0
    data['digit2'] =0
    data['digit3'] =0
    data['digit4'] =0
    
    data['enter1'] =0
    data['enter2'] =0
    data['enter3'] =0
    data['enter4'] =0
    
    data['row'] =1
    data['column'] =1
    
    data['cows'] =0
    data['bulls'] =0
    
    masterGrid = RectangleAsset(COLS*CELL_SIZE,ROWS*CELL_SIZE,LineStyle(1,brown),brown)
    Sprite(masterGrid)
    
    pickCode()
    
    while data['enter1'] != data['digit1'] or data['enter2'] != data['digit2'] or data['enter3'] != data['digit3'] or data['enter4'] != data['digit4']:
        if enterCode() == True:
            if checkcode() == True:
                print('YOU WIN!')
            else:
                print('Bulls:',data['bulls'],'Cows:',data['cows'])
                #resets the entered code
                data['enter1'] = 0
                data['enter2'] = 0
                data['enter3'] = 0
                data['enter4'] = 0
        
    App().run()

